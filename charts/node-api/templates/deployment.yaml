apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.name }}
    chart: {{ template "chart.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    {{- if .Values.metrics.enabled }}
    metrics: {{ default "prometheus" .Values.metrics.label }}
    {{- end }}
spec:
  replicas: {{ .Values.pod.replicas }}
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ .Values.name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        release: {{ .Release.Name }}
      {{- if .Values.pod.annotations }}
      annotations:
        {{ toYaml .Values.pod.annotations | indent 8 | trim }}
      {{- end }}
    spec:
      {{- if .Values.global.priorityClassName }}
      priorityClassName: {{ .Values.global.priorityClassName }}
      {{- end }}
      serviceAccountName: {{ template "node-api.serviceAccountName" . }}
      containers:
      - name: {{ .Values.name }}
        {{- if .Values.image.digest }}
        image: {{ .Values.image.repository }}@{{ .Values.image.digest }}
        {{- else }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        {{- end }}
        imagePullPolicy: {{ .Values.global.pullPolicy }}
        {{- if .Values.pod.workingDir }}
        workingDir: {{ .Values.pod.workingDir }}
        {{- end }}
        {{- if .Values.pod.command }}
        command:
        {{- range .Values.pod.command }}
         - {{ . | quote }}
        {{- end }}
        {{- end }}
        env:
        - name: NODE_ENV
          {{- if .Values.global.env }}
          value: {{ .Values.global.env }}
          {{- else }}
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
          {{- end }}
        {{- if .Values.pod.env }}
        {{- range .Values.pod.env.values }}
        - name: {{ .name }}
          value: "{{ .value }}"
        {{- end }}
        {{- range .Values.pod.env.secrets }}
        - name: {{ .key }}
          valueFrom:
            secretKeyRef:
              name: {{ .name }}
              key: {{ .key }}
        {{- end }}
        {{- end }}
        {{- if .Values.global.configHash }}
        - name: CONFIG_HASH
          value: {{ .Values.global.configHash }}
        {{- end }}
        ports:
        - name: http
          containerPort: {{ default .Values.service.port .Values.service.targetPort }}
          protocol: TCP
        {{- if .Values.metrics.enabled }}
        - name: metrics
          containerPort: {{ .Values.metrics.port }}
          protocol: TCP
        {{- end }}
        livenessProbe:
          httpGet:
            path: {{ .Values.healthCheck.path }}
            port: {{ default (default .Values.service.port .Values.service.targetPort) .Values.healthCheck.port }}
          initialDelaySeconds: {{ .Values.healthCheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.healthCheck.periodSeconds }}
          timeoutSeconds: {{ .Values.healthCheck.timeoutSeconds }}
          failureThreshold: {{ .Values.healthCheck.failureThreshold }}
        readinessProbe:
          httpGet:
            path: {{ .Values.healthCheck.path }}
            port: {{ default (default .Values.service.port .Values.service.targetPort) .Values.healthCheck.port }}
          initialDelaySeconds: {{ .Values.healthCheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.healthCheck.periodSeconds }}
          timeoutSeconds: {{ .Values.healthCheck.timeoutSeconds }}
          failureThreshold: {{ .Values.healthCheck.failureThreshold }}
        resources:
          {{ toYaml .Values.resources | indent 10 | trim }}
        volumeMounts:
        {{- range .Values.pod.extraConfigmapMounts }}
        - name: {{ .name }}
          mountPath: {{ .mountPath }}
          subPath: {{ .subPath | default "" }}
          readOnly: {{ .readOnly | default "true" }}
        {{- end }}
        {{- range .Values.pod.extraSecretMounts }}
        - name: {{ .name }}
          mountPath: {{ .mountPath }}
          readOnly: {{ .readOnly | default "true" }}
        {{- end }}
        {{- if .Values.pod.configMap }}
        - name: {{ .Values.pod.configMap.name }}
          mountPath: {{ .Values.pod.configMap.path }}
        {{- if .Values.pod.configMap.key }}
          subPath: {{ .Values.pod.configMap.key }}
        {{- end }}
        {{- end }}
      volumes:
      {{- range .Values.pod.extraConfigmapMounts }}
      - name: {{ .name }}
        configMap:
          name: {{ .configMap }}
      {{- end }}
      {{- range .Values.pod.extraSecretMounts }}
      - name: {{ .name }}
        secret:
          secretName: {{ .secretName }}
          defaultMode: {{ .defaultMode | default "256" }}
      {{- end }}
      {{- if .Values.pod.configMap }}
      - name: {{ .Values.pod.configMap.name }}
        configMap:
          name: {{ .Values.pod.configMap.name }}
      {{- end }}
      {{- if .Values.global.pullSecrets }}
      imagePullSecrets:
      {{ toYaml .Values.global.pullSecrets | indent 6 | trim }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | indent 8 | trim }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{ toYaml . | indent 8 | trim }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{ toYaml . | indent 8 | trim }}
      {{- end }}
