apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.name }}
    chart: {{ template "chart.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.pod.replicas }}
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ .Values.name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        release: {{ .Release.Name }}
      annotations:
        {{- if .Values.pod.annotations }}
{{ toYaml .Values.pod.annotations | indent 8 }}
        {{ end }}
    spec:
      {{- if .Values.global.priorityClassName }}
      priorityClassName: {{ .Values.global.priorityClassName }}
      {{- end }}
      containers:
        - name: {{ .Values.name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.global.pullPolicy }}
          {{- if .Values.pod.command }}
          command:
            {{- range .Values.pod.command }}
             - {{ . | quote }}
            {{- end }}
          {{- end }}
          env:
            - name: NODE_ENV
{{ if .Values.global.env }}
              value: {{ .Values.global.env }}
{{ else }}
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
{{ end }}
{{ if .Values.pod.env }}
{{- range .Values.pod.env.values }}
            - name: {{ .name }}
              value: {{ .value }}
{{- end }}
{{- range .Values.pod.env.secrets }}
            - name: {{ .key }}
              valueFrom:
                secretKeyRef:
                  name: {{ .name }}
                  key: {{ .key }}
{{- end }}
{{ end }}
{{ if .Values.pod.configHash }}
            - name: CONFIG_HASH
              value: {{ .Values.pod.configHash }}
{{ end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.healthCheck.path }}
              port: {{ default .Values.service.port .Values.service.targetPort }}
            initialDelaySeconds: {{ .Values.healthCheck.initialDelay }}
            periodSeconds: {{ .Values.healthCheck.periodSeconds }}
            timeoutSeconds: {{ .Values.healthCheck.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.healthCheck.path }}
              port: {{ default .Values.service.port .Values.service.targetPort }}
            initialDelaySeconds: {{ .Values.healthCheck.initialDelay }}
            periodSeconds: {{ .Values.healthCheck.periodSeconds }}
            timeoutSeconds: {{ .Values.healthCheck.timeoutSeconds }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{ if .Values.pod.configMap }}
          volumeMounts:
            - name: {{ .Values.pod.configMap.name }}
              mountPath: {{ .Values.pod.configMap.path }}
      volumes:
        - name: {{ .Values.pod.configMap.name }}
          configMap:
            name: {{ .Values.pod.configMap.name }}
{{ end }}
{{- if .Values.global.pullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.global.pullSecrets | indent 6 }}
{{ end }}
